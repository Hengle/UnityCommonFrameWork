//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class KCPNetworkWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(KCPNetwork), typeof(System.Object));
		L.RegFunction("Init", Init);
		L.RegFunction("SetReceiveAny", SetReceiveAny);
		L.RegFunction("SetReceive", SetReceive);
		L.RegFunction("Update", Update);
		L.RegFunction("Send", Send);
		L.RegFunction("New", _CreateKCPNetwork);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateKCPNetwork(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				KCPNetwork obj = new KCPNetwork();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: KCPNetwork.New");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Init(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 6);
			KCPNetwork obj = (KCPNetwork)ToLua.CheckObject(L, 1, typeof(KCPNetwork));
			string arg0 = ToLua.CheckString(L, 2);
			uint arg1 = (uint)LuaDLL.luaL_checknumber(L, 3);
			string arg2 = ToLua.CheckString(L, 4);
			int arg3 = (int)LuaDLL.luaL_checknumber(L, 5);
			int arg4 = (int)LuaDLL.luaL_checknumber(L, 6);
			obj.Init(arg0, arg1, arg2, arg3, arg4);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetReceiveAny(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			KCPNetwork obj = (KCPNetwork)ToLua.CheckObject(L, 1, typeof(KCPNetwork));
			LuaFunction arg0 = ToLua.CheckLuaFunction(L, 2);
			obj.SetReceiveAny(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetReceive(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			KCPNetwork obj = (KCPNetwork)ToLua.CheckObject(L, 1, typeof(KCPNetwork));
			LuaFunction arg0 = ToLua.CheckLuaFunction(L, 2);
			obj.SetReceive(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Update(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			KCPNetwork obj = (KCPNetwork)ToLua.CheckObject(L, 1, typeof(KCPNetwork));
			obj.Update();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Send(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			KCPNetwork obj = (KCPNetwork)ToLua.CheckObject(L, 1, typeof(KCPNetwork));
			byte[] arg0 = ToLua.CheckByteBuffer(L, 2);
			obj.Send(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

